require("cpm")
library("ggplot2")
library(scales)
library(grid)
library(plyr)

setwd("/usr/local/htdocs/access/lib/data/etl/klerman_nrem_cycles/sleep")
epoch_length <- (30.0 / 3600)

# Helper Functions
start_end_times <- function(df) { c(min(df$day_labtime), max(df$day_labtime)) }
map_epoch_type <- function(x) {
  if (x >= 1 & x <=4) { "NREM" }
  else if (x == 5) { "WAKE" }
  else if (x == 6) { "REM" }
  else { "UNDEF" }
}

calculate_bouts <- function(V1=NA, V2=NA, df=NA) {
  # get most frequent type
  c(names(sort(-table(df[V1:V2,]$epoch_type)))[1], df$labtime[V1], df$labtime[V2])
  

  #df[chunk[1]:chunk[2],]$epoch_type
}

clean_bouts <- function(x) {
  x[1]
  #c(start, end)
}

df <- read.csv("3232GXSlp.01.csv")
# Limit scope for now
df <- df[1:3000,]

# Data Setup
colnames(df) <- c("subject_code", "sleep_wake_period", "labtime", "stage")
df$day_number <- floor(df$labtime / 24)
min_day_num <- min(df$day_number)
df$day_labtime <- (df$labtime - (df$day_number * 24))
df$day_number <- df$day_number - (min(df$day_number) - 1)
df$period_type <- factor(df$sleep_wake_period < 0, labels=c("sp", "wp")) 

# Get period start and end times
periods <- ddply(df, .(period_type, day_number, sleep_wake_period), start_end_times)
colnames(periods) <- c("period_type", "day_number", "sleep_or_wake_period", "start", "end")

# Label NREM, REM, WAKE, UNDEF
df$epoch_type <- factor(sapply(df$stage, map_epoch_type))

# Get Changepoints + Bouts
cpm_res <- processStream(df$epoch_type, cpmType="Mann-Whitney", ARL0=500, startup=20)
changepoint_rows <- df[cpm_res$changePoints,]
chunks <- as.data.frame(cbind(c(1, cpm_res$changePoints), c(cpm_res$changePoints, nrow(df))))
bouts <- mdply(chunks, calculate_bouts, df=df)
#bouts <- as.data.frame(t(apply(chunks, 1, calculate_bouts, df=df)))
colnames(bouts) <- c("bout_type", "start", "end")
bouts$start <- as.numeric(bouts$start)
bouts$end <- as.numeric(bouts$end)
bouts$start_day_number <- floor(bouts$start / 24)
bouts$start_day_labtime <- (bouts$start - (bouts$start_day_number * 24))
bouts$start_day_number <- bouts$start_day_number - (min_day_num - 1)
bouts$end_day_number <- floor(bouts$end / 24)
bouts$end_day_labtime <- (bouts$end - (bouts$end_day_number * 24))
bouts$end_day_number <- bouts$end_day_number - (min_day_num - 1)
clean <- bouts[!bouts$start_day_number != bouts$end_day_number,]
clean$day_number <- clean$start_day_number
to_clean <- bouts[bouts$start_day_number != bouts$end_day_number,]

# Draw
.e <- environment()
plot <- ggplot(df, aes(day_labtime, stage, group=day_number), environment = .e)
plot <- plot + facet_grid(day_number ~ .)
plot <- plot + geom_rect(aes(NULL, NULL, xmin = start, xmax = end + epoch_length, fill = period_type), ymin = 0, ymax = 5, data = periods)
plot <- plot + geom_rect(aes(NULL, NULL, xmin = start_day_labtime, xmax = end_day_labtime + epoch_length, fill = bout_type), ymin = 5, ymax = 10, data = clean)

plot <- plot + geom_vline(aes(xintercept = day_labtime), color="red", width=.2, data=changepoint_rows)

#plot + geom_line(aes(group=day_number), size=.2)